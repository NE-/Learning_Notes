;;;
;  Author:  NE- https://github.com/NE-
;  Date:    2023 December 06
;  Purpose: Binary Search implementation for DMG GameBoy ("GBZ80")
;
;  Notes: 
;    - Compiled with vasm
;      - Header generated by rgbfix
;    - Ran with BGB emulator
;    - There are no visuals
;;;

; Declare variables
START equ $C000 ; Start pointer for the list
MID   equ $C001 ; Middle pointer for the list
END   equ $C002 ; End pointer for the list
NUM   equ $C003 ; Holds the number to find

  org &0000

  ; Interrupts unused
  org &0040
    reti
  org &0048
    reti
  org &0050
    reti
  org &0058
    reti
  org &0060
    reti

  org &0100
    di
    jp main

;;;
; Header is generated by rgbfix
;;;

  org &0150
main:
  ; Initialize stack pointer
  ld sp, $FFFF

  ; Turn off sound
  xor a
  ld ($FF26), a

  ; Initialize variables
  ld (START), a  ; Start pointer at 0 (start)
  ld a, EndArr-arr
  dec a
  ld (END), a    ; End pointer at end of array (length - 1)
  ld a, 57       ; Number to find
  ld (NUM), a

whileSTARTlteEND:
  ; Calculate mid ((start + end) / 2)
  ld a, (END)
  ld b, a
  ld a, (START)
  add b
  srl a
  ld (MID), a

  ; Get element at the current middle
  ld hl, arr
  add l
  ld l, a
  ld b, (hl)

  ; Get element to find
  ld a, (NUM)

  ; Comparisons
  cp b
  jr z, Found
  jr c, LessThan
  ;; Element must be greater than
  ; START = MID + 1
  ld hl, MID
  inc (hl)
  ld a, (hl)
  ld hl, START
  ld (hl), a

isSTARTlteEND:
  ; Checks for START <= END for the while loop
  ld a, (END)
  ld b, a
  ld a, (START)
  cp b
  jr z, whileSTARTlteEND ; START == END
  jr nc, NotFound        ; START >= END
  jr whileSTARTlteEND    ; START < END

LessThan:
  ; END = MID - 1
  ld hl, MID
  dec (hl)
  ld a, (hl)
  ld hl, END
  ld (hl), a
  jr isSTARTlteEND

Found:
  ld a, (MID) ; Return result in a
  jr inf

NotFound:
  ld a, $FF ; Return -1
  jr inf

inf: 
  jr inf

arr:
  db 1,4,15,27,29,34,36,57,68
EndArr: